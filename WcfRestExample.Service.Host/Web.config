<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  
  <!-- Unity section -->
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
  </configSections>
  
  <!-- Unity IOC config -->
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="IRepository" type="WcfRestExample.Common.Interfaces.IRepository`1, WcfRestExample.Common.Interfaces" />
    <alias alias="NoSqlRepository" type="WcfRestExample.Common.Data.NoSql.NoSqlRepository`1, WcfRestExample.Common.Data.NoSql"/>
    <alias alias="IEmployeeService" type="WcfRestExample.Plugins.Employees.IEmployeeService, WcfRestExample.Plugins.Employees" />
    <alias alias="EmployeeService" type="WcfRestExample.Plugins.Employees.EmployeeService, WcfRestExample.Plugins.Employees"/>
    <alias alias="ILoggerService" type="WcfRestExample.Plugins.Logger.ILoggerService, WcfRestExample.Plugins.Logger" />
    <alias alias="LoggerService" type="WcfRestExample.Plugins.Logger.LoggerService, WcfRestExample.Plugins.Logger"/>
    <alias alias="ILoggerExt" type="WcfRestExample.Common.Infrastructure.ILoggerExt, WcfRestExample.Common.Infrastructure" />
    <alias alias="LoggerWrapper" type="WcfRestExample.Common.Infrastructure.LoggerWrapper, WcfRestExample.Common.Infrastructure" />
    <container>
      <register type="IRepository[]" mapTo="NoSqlRepository[]">
        <constructor />
      </register>
      <register type="IEmployeeService" mapTo="EmployeeService">
        <constructor />
      </register>
      <register type="ILoggerService" mapTo="LoggerService">
        <constructor />
      </register>
      <register type="ILoggerExt" mapTo="LoggerWrapper">
      </register>
    </container>
  </unity>
  
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" throwExceptions="true">
		<targets>
      <target name="defaultAsync" xsi:type="AsyncWrapper">
			  <target name="default" xsi:type="File"
          layout="${longdate}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}"
				  fileName="${basedir}\logs\log.txt"
          keepFileOpen="true"
				  archiveFileName="${basedir}\logs\archives\log.{#}.txt"
				  archiveEvery="Day"
				  archiveNumbering="Rolling"
				  maxArchiveFiles="7" />
      </target>
      <target name="errorsAsync" xsi:type="AsyncWrapper">
        <target name="errors" xsi:type="File"
          layout="${longdate}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}"
          fileName="${basedir}\logs\errors.txt"
          keepFileOpen="true"
          archiveFileName="${basedir}\logs\archives\errors.{#}.txt"
          archiveEvery="Day"
          archiveNumbering="Rolling"
          maxArchiveFiles="7" />
      </target>
    <target name="clientAsync" xsi:type="AsyncWrapper">
        <target name="client" xsi:type="File"
          layout="${longdate}|${level:uppercase=true}|${message}"
          fileName="${basedir}\logs\client.txt"
          keepFileOpen="true"
          archiveFileName="${basedir}s\logs\archives\client.{#}.txt"
          archiveEvery="Day"
          archiveNumbering="Rolling"
          maxArchiveFiles="7" />
      </target>
		</targets>
		<rules>
      <logger name="WcfRestExample.Plugins.Logger.LoggerService" minlevel="Trace" writeTo="clientAsync" final="true" />
			<logger name="*" minlevel="Trace" writeTo="defaultAsync" />
			<logger name="*" minlevel="Error" writeTo="errorsAsync" />
		</rules>
	</nlog>

  <system.web>
    <compilation debug="true" targetFramework="4.6"/>
    <httpRuntime targetFramework="4.6"/>
  </system.web>
  
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <!-- NoSql LiteDB file -->
    <add key="noSqlDb" value="WcfRestExample.db" />
  </appSettings>

  <system.serviceModel>
    
    <protocolMapping>
        <add scheme="http" binding="webHttpBinding"/>
    </protocolMapping>
    
    <services>
      <!-- Employees WCF Service Plugin  -->
      <service name="WcfRestExample.Plugins.Employees.EmployeeService" behaviorConfiguration="DefaultBehavior">
        <endpoint address="" binding="webHttpBinding" contract="WcfRestExample.Plugins.Employees.IEmployeeService" behaviorConfiguration="web" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:61256/" />
          </baseAddresses>
        </host>
      </service>
      <!-- Logger WCF Service Plugin -->
      <service name="WcfRestExample.Plugins.Logger.LoggerService" behaviorConfiguration="DefaultBehavior">
        <endpoint address="" binding="webHttpBinding" contract="WcfRestExample.Plugins.Logger.ILoggerService" behaviorConfiguration="web" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:61256/" />
          </baseAddresses>
        </host>
      </service>
    </services>
    
    <behaviors>
      <serviceBehaviors>
        <behavior name="DefaultBehavior">
          <serviceMetadata httpGetEnabled="True" httpsGetEnabled="True" />
          <serviceDebug includeExceptionDetailInFaults="False" />
          <serviceThrottling maxConcurrentCalls="100"/>
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="web">
          <webHttp helpEnabled="true" />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    
    <standardEndpoints>
      <webHttpEndpoint>
        <standardEndpoint name="" helpEnabled="true" />
      </webHttpEndpoint>
    </standardEndpoints>
    
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>

</configuration>